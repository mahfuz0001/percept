"useclient"

import*asReactfrom"react"
import*asDropdownMenuPrimitivefrom"@radix-ui/react-dropdown-menu"
import{CheckIcon,ChevronRightIcon,CircleIcon}from"lucide-react"

import{cn}from"@/lib/utils"

functionDropdownMenu({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Root>){
return<DropdownMenuPrimitive.Rootdata-slot="dropdown-menu"{...props}/>
}

functionDropdownMenuPortal({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Portal>){
return(
<DropdownMenuPrimitive.Portaldata-slot="dropdown-menu-portal"{...props}/>
)
}

functionDropdownMenuTrigger({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Trigger>){
return(
<DropdownMenuPrimitive.Trigger
data-slot="dropdown-menu-trigger"
{...props}
/>
)
}

functionDropdownMenuContent({
className,
sideOffset=4,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Content>){
return(
<DropdownMenuPrimitive.Portal>
<DropdownMenuPrimitive.Content
data-slot="dropdown-menu-content"
sideOffset={sideOffset}
className={cn(
"bg-popovertext-popover-foregrounddata-[state=open]:animate-indata-[state=closed]:animate-outdata-[state=closed]:fade-out-0data-[state=open]:fade-in-0data-[state=closed]:zoom-out-95data-[state=open]:zoom-in-95data-[side=bottom]:slide-in-from-top-2data-[side=left]:slide-in-from-right-2data-[side=right]:slide-in-from-left-2data-[side=top]:slide-in-from-bottom-2z-50max-h-(--radix-dropdown-menu-content-available-height)min-w-[8rem]origin-(--radix-dropdown-menu-content-transform-origin)overflow-x-hiddenoverflow-y-autorounded-mdborderp-1shadow-md",
className
)}
{...props}
/>
</DropdownMenuPrimitive.Portal>
)
}

functionDropdownMenuGroup({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Group>){
return(
<DropdownMenuPrimitive.Groupdata-slot="dropdown-menu-group"{...props}/>
)
}

functionDropdownMenuItem({
className,
inset,
variant="default",
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Item>&{
inset?:boolean
variant?:"default"|"destructive"
}){
return(
<DropdownMenuPrimitive.Item
data-slot="dropdown-menu-item"
data-inset={inset}
data-variant={variant}
className={cn(
"focus:bg-accentfocus:text-accent-foregrounddata-[variant=destructive]:text-destructivedata-[variant=destructive]:focus:bg-destructive/10dark:data-[variant=destructive]:focus:bg-destructive/20data-[variant=destructive]:focus:text-destructivedata-[variant=destructive]:*:[svg]:!text-destructive[&_svg:not([class*='text-'])]:text-muted-foregroundrelativeflexcursor-defaultitems-centergap-2rounded-smpx-2py-1.5text-smoutline-hiddenselect-nonedata-[disabled]:pointer-events-nonedata-[disabled]:opacity-50data-[inset]:pl-8[&_svg]:pointer-events-none[&_svg]:shrink-0[&_svg:not([class*='size-'])]:size-4",
className
)}
{...props}
/>
)
}

functionDropdownMenuCheckboxItem({
className,
children,
checked,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.CheckboxItem>){
return(
<DropdownMenuPrimitive.CheckboxItem
data-slot="dropdown-menu-checkbox-item"
className={cn(
"focus:bg-accentfocus:text-accent-foregroundrelativeflexcursor-defaultitems-centergap-2rounded-smpy-1.5pr-2pl-8text-smoutline-hiddenselect-nonedata-[disabled]:pointer-events-nonedata-[disabled]:opacity-50[&_svg]:pointer-events-none[&_svg]:shrink-0[&_svg:not([class*='size-'])]:size-4",
className
)}
checked={checked}
{...props}
>
<spanclassName="pointer-events-noneabsoluteleft-2flexsize-3.5items-centerjustify-center">
<DropdownMenuPrimitive.ItemIndicator>
<CheckIconclassName="size-4"/>
</DropdownMenuPrimitive.ItemIndicator>
</span>
{children}
</DropdownMenuPrimitive.CheckboxItem>
)
}

functionDropdownMenuRadioGroup({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.RadioGroup>){
return(
<DropdownMenuPrimitive.RadioGroup
data-slot="dropdown-menu-radio-group"
{...props}
/>
)
}

functionDropdownMenuRadioItem({
className,
children,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.RadioItem>){
return(
<DropdownMenuPrimitive.RadioItem
data-slot="dropdown-menu-radio-item"
className={cn(
"focus:bg-accentfocus:text-accent-foregroundrelativeflexcursor-defaultitems-centergap-2rounded-smpy-1.5pr-2pl-8text-smoutline-hiddenselect-nonedata-[disabled]:pointer-events-nonedata-[disabled]:opacity-50[&_svg]:pointer-events-none[&_svg]:shrink-0[&_svg:not([class*='size-'])]:size-4",
className
)}
{...props}
>
<spanclassName="pointer-events-noneabsoluteleft-2flexsize-3.5items-centerjustify-center">
<DropdownMenuPrimitive.ItemIndicator>
<CircleIconclassName="size-2fill-current"/>
</DropdownMenuPrimitive.ItemIndicator>
</span>
{children}
</DropdownMenuPrimitive.RadioItem>
)
}

functionDropdownMenuLabel({
className,
inset,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Label>&{
inset?:boolean
}){
return(
<DropdownMenuPrimitive.Label
data-slot="dropdown-menu-label"
data-inset={inset}
className={cn(
"px-2py-1.5text-smfont-mediumdata-[inset]:pl-8",
className
)}
{...props}
/>
)
}

functionDropdownMenuSeparator({
className,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Separator>){
return(
<DropdownMenuPrimitive.Separator
data-slot="dropdown-menu-separator"
className={cn("bg-border-mx-1my-1h-px",className)}
{...props}
/>
)
}

functionDropdownMenuShortcut({
className,
...props
}:React.ComponentProps<"span">){
return(
<span
data-slot="dropdown-menu-shortcut"
className={cn(
"text-muted-foregroundml-autotext-xstracking-widest",
className
)}
{...props}
/>
)
}

functionDropdownMenuSub({
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.Sub>){
return<DropdownMenuPrimitive.Subdata-slot="dropdown-menu-sub"{...props}/>
}

functionDropdownMenuSubTrigger({
className,
inset,
children,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.SubTrigger>&{
inset?:boolean
}){
return(
<DropdownMenuPrimitive.SubTrigger
data-slot="dropdown-menu-sub-trigger"
data-inset={inset}
className={cn(
"focus:bg-accentfocus:text-accent-foregrounddata-[state=open]:bg-accentdata-[state=open]:text-accent-foregroundflexcursor-defaultitems-centerrounded-smpx-2py-1.5text-smoutline-hiddenselect-nonedata-[inset]:pl-8",
className
)}
{...props}
>
{children}
<ChevronRightIconclassName="ml-autosize-4"/>
</DropdownMenuPrimitive.SubTrigger>
)
}

functionDropdownMenuSubContent({
className,
...props
}:React.ComponentProps<typeofDropdownMenuPrimitive.SubContent>){
return(
<DropdownMenuPrimitive.SubContent
data-slot="dropdown-menu-sub-content"
className={cn(
"bg-popovertext-popover-foregrounddata-[state=open]:animate-indata-[state=closed]:animate-outdata-[state=closed]:fade-out-0data-[state=open]:fade-in-0data-[state=closed]:zoom-out-95data-[state=open]:zoom-in-95data-[side=bottom]:slide-in-from-top-2data-[side=left]:slide-in-from-right-2data-[side=right]:slide-in-from-left-2data-[side=top]:slide-in-from-bottom-2z-50min-w-[8rem]origin-(--radix-dropdown-menu-content-transform-origin)overflow-hiddenrounded-mdborderp-1shadow-lg",
className
)}
{...props}
/>
)
}

export{
DropdownMenu,
DropdownMenuPortal,
DropdownMenuTrigger,
DropdownMenuContent,
DropdownMenuGroup,
DropdownMenuLabel,
DropdownMenuItem,
DropdownMenuCheckboxItem,
DropdownMenuRadioGroup,
DropdownMenuRadioItem,
DropdownMenuSeparator,
DropdownMenuShortcut,
DropdownMenuSub,
DropdownMenuSubTrigger,
DropdownMenuSubContent,
}
