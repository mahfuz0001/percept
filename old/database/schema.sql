--PerceptPlatformDatabaseSchema
--Thisschemasupportstheanti-tutorialhellplatformwithchallenge-basedlearning

--Enablenecessaryextensions
CREATEEXTENSIONIFNOTEXISTS"uuid-ossp";
CREATEEXTENSIONIFNOTEXISTS"pgcrypto";

--Userstable(extendsClerkuserdata)
CREATETABLEIFNOTEXISTSusers(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
clerk_user_idTEXTUNIQUENOTNULL,
emailTEXTUNIQUENOTNULL,
usernameTEXTUNIQUE,
full_nameTEXT,
avatar_urlTEXT,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
updated_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
last_seen_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
is_activeBOOLEANDEFAULTTRUE,
preferencesJSONBDEFAULT'{}'::JSONB
);

--Technologiestable(HTML,CSS,JavaScript,TypeScript,React,etc.)
CREATETABLEIFNOTEXISTStechnologies(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
nameTEXTUNIQUENOTNULL,
slugTEXTUNIQUENOTNULL,
descriptionTEXT,
icon_urlTEXT,
colorTEXT,
difficulty_levelINTEGERDEFAULT1,--1=Beginner,2=Intermediate,3=Advanced
is_activeBOOLEANDEFAULTTRUE,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW()
);

--Challengecategories
CREATETABLEIFNOTEXISTSchallenge_categories(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
nameTEXTUNIQUENOTNULL,
slugTEXTUNIQUENOTNULL,
descriptionTEXT,
iconTEXT,
sort_orderINTEGERDEFAULT0,
is_activeBOOLEANDEFAULTTRUE,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW()
);

--Challengestable
CREATETABLEIFNOTEXISTSchallenges(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
titleTEXTNOTNULL,
slugTEXTUNIQUENOTNULL,
descriptionTEXTNOTNULL,
difficulty_levelINTEGERNOTNULLDEFAULT1,--1=Beginner,2=Intermediate,3=Advanced
category_idUUIDREFERENCESchallenge_categories(id)ONDELETECASCADE,
technology_idUUIDREFERENCEStechnologies(id)ONDELETECASCADE,

--Challengecontent
problem_statementTEXTNOTNULL,
requirementsTEXT[],--Arrayofrequirements
starter_codeTEXT,
solution_templateTEXT,
test_casesJSONBDEFAULT'[]'::JSONB,

--Validationandhints
validation_criteriaJSONBDEFAULT'{}'::JSONB,
hint_systemJSONBDEFAULT'[]'::JSONB,--Progressivehints

--Metadata
estimated_time_minutesINTEGER,
pointsINTEGERDEFAULT100,
tagsTEXT[],
prerequisitesUUID[],--ArrayofprerequisitechallengeIDs

--Statusandtiming
is_publishedBOOLEANDEFAULTFALSE,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
updated_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
created_byUUIDREFERENCESusers(id)ONDELETESETNULL
);

--Userchallengeprogress
CREATETABLEIFNOTEXISTSuser_challenge_progress(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
user_idUUIDREFERENCESusers(id)ONDELETECASCADE,
challenge_idUUIDREFERENCESchallenges(id)ONDELETECASCADE,

--Progresstracking
statusTEXTNOTNULLDEFAULT'not_started',--not_started,in_progress,completed,submitted
current_codeTEXT,
completion_percentageDECIMAL(5,2)DEFAULT0,

--Timingdata
started_atTIMESTAMPWITHTIMEZONE,
completed_atTIMESTAMPWITHTIMEZONE,
time_spent_minutesINTEGERDEFAULT0,

--Submissiondata
submission_countINTEGERDEFAULT0,
last_submission_atTIMESTAMPWITHTIMEZONE,
best_scoreINTEGERDEFAULT0,

--AIinteraction
hints_usedINTEGERDEFAULT0,
ai_interactionsJSONBDEFAULT'[]'::JSONB,

created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
updated_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),

UNIQUE(user_id,challenge_id)
);

--Userachievements
CREATETABLEIFNOTEXISTSachievements(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
nameTEXTUNIQUENOTNULL,
descriptionTEXTNOTNULL,
iconTEXT,
badge_colorTEXT,
pointsINTEGERDEFAULT0,
criteriaJSONBNOTNULL,--Conditionsforearningachievement
is_activeBOOLEANDEFAULTTRUE,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW()
);

--Userearnedachievements
CREATETABLEIFNOTEXISTSuser_achievements(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
user_idUUIDREFERENCESusers(id)ONDELETECASCADE,
achievement_idUUIDREFERENCESachievements(id)ONDELETECASCADE,
earned_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
progress_dataJSONBDEFAULT'{}'::JSONB,

UNIQUE(user_id,achievement_id)
);

--Useranalyticsandlearningpath
CREATETABLEIFNOTEXISTSuser_analytics(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
user_idUUIDREFERENCESusers(id)ONDELETECASCADE,

--Daily/Weeklystats
dateDATENOTNULL,
challenges_attemptedINTEGERDEFAULT0,
challenges_completedINTEGERDEFAULT0,
time_spent_minutesINTEGERDEFAULT0,
hints_usedINTEGERDEFAULT0,
points_earnedINTEGERDEFAULT0,

--Technologyfocus
technologies_practicedTEXT[],
primary_technologyTEXT,

created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),

UNIQUE(user_id,date)
);

--Learningpaths(curatedsequencesofchallenges)
CREATETABLEIFNOTEXISTSlearning_paths(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
nameTEXTNOTNULL,
descriptionTEXT,
difficulty_levelINTEGERDEFAULT1,
estimated_duration_hoursINTEGER,
technology_idUUIDREFERENCEStechnologies(id)ONDELETECASCADE,
challenge_sequenceUUID[],--OrderedarrayofchallengeIDs
is_publishedBOOLEANDEFAULTFALSE,
created_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
created_byUUIDREFERENCESusers(id)ONDELETESETNULL
);

--Userlearningpathprogress
CREATETABLEIFNOTEXISTSuser_learning_path_progress(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
user_idUUIDREFERENCESusers(id)ONDELETECASCADE,
learning_path_idUUIDREFERENCESlearning_paths(id)ONDELETECASCADE,
current_challenge_indexINTEGERDEFAULT0,
completed_challengesUUID[],
started_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
completed_atTIMESTAMPWITHTIMEZONE,

UNIQUE(user_id,learning_path_id)
);

--Codesubmissions(forreviewandanalysis)
CREATETABLEIFNOTEXISTScode_submissions(
idUUIDPRIMARYKEYDEFAULTuuid_generate_v4(),
user_idUUIDREFERENCESusers(id)ONDELETECASCADE,
challenge_idUUIDREFERENCESchallenges(id)ONDELETECASCADE,

--Submissioncontent
submitted_codeTEXTNOTNULL,
languageTEXTNOTNULL,

--Analysisresults
passes_testsBOOLEANDEFAULTFALSE,
test_resultsJSONBDEFAULT'{}'::JSONB,
ai_feedbackJSONBDEFAULT'{}'::JSONB,
scoreINTEGERDEFAULT0,

--Metadata
submitted_atTIMESTAMPWITHTIMEZONEDEFAULTNOW(),
analysis_completed_atTIMESTAMPWITHTIMEZONE,
versionINTEGERDEFAULT1
);

--Indexesforperformance
CREATEINDEXIFNOTEXISTSidx_users_clerk_user_idONusers(clerk_user_id);
CREATEINDEXIFNOTEXISTSidx_users_emailONusers(email);
CREATEINDEXIFNOTEXISTSidx_challenges_slugONchallenges(slug);
CREATEINDEXIFNOTEXISTSidx_challenges_technologyONchallenges(technology_id);
CREATEINDEXIFNOTEXISTSidx_challenges_categoryONchallenges(category_id);
CREATEINDEXIFNOTEXISTSidx_challenges_difficultyONchallenges(difficulty_level);
CREATEINDEXIFNOTEXISTSidx_user_progress_user_idONuser_challenge_progress(user_id);
CREATEINDEXIFNOTEXISTSidx_user_progress_challenge_idONuser_challenge_progress(challenge_id);
CREATEINDEXIFNOTEXISTSidx_user_progress_statusONuser_challenge_progress(status);
CREATEINDEXIFNOTEXISTSidx_user_analytics_user_dateONuser_analytics(user_id,date);
CREATEINDEXIFNOTEXISTSidx_code_submissions_user_challengeONcode_submissions(user_id,challenge_id);

--RLS(RowLevelSecurity)policies
ALTERTABLEusersENABLEROWLEVELSECURITY;
ALTERTABLEuser_challenge_progressENABLEROWLEVELSECURITY;
ALTERTABLEuser_achievementsENABLEROWLEVELSECURITY;
ALTERTABLEuser_analyticsENABLEROWLEVELSECURITY;
ALTERTABLEuser_learning_path_progressENABLEROWLEVELSECURITY;
ALTERTABLEcode_submissionsENABLEROWLEVELSECURITY;

--BasicRLSpolicies(userscanonlyaccesstheirowndata)
CREATEPOLICY"Userscanviewownprofile"ONusersFORSELECTUSING(clerk_user_id=current_setting('app.current_user_id',true));
CREATEPOLICY"Userscanupdateownprofile"ONusersFORUPDATEUSING(clerk_user_id=current_setting('app.current_user_id',true));

CREATEPOLICY"Userscanviewownprogress"ONuser_challenge_progressFORALLUSING(user_idIN(SELECTidFROMusersWHEREclerk_user_id=current_setting('app.current_user_id',true)));

CREATEPOLICY"Userscanviewownachievements"ONuser_achievementsFORALLUSING(user_idIN(SELECTidFROMusersWHEREclerk_user_id=current_setting('app.current_user_id',true)));

CREATEPOLICY"Userscanviewownanalytics"ONuser_analyticsFORALLUSING(user_idIN(SELECTidFROMusersWHEREclerk_user_id=current_setting('app.current_user_id',true)));

CREATEPOLICY"Userscanviewownlearningpathprogress"ONuser_learning_path_progressFORALLUSING(user_idIN(SELECTidFROMusersWHEREclerk_user_id=current_setting('app.current_user_id',true)));

CREATEPOLICY"Userscanviewownsubmissions"ONcode_submissionsFORALLUSING(user_idIN(SELECTidFROMusersWHEREclerk_user_id=current_setting('app.current_user_id',true)));

--Functionsforupdated_attimestamps
CREATEORREPLACEFUNCTIONupdate_updated_at_column()
RETURNSTRIGGERAS$$
BEGIN
NEW.updated_at=NOW();
RETURNNEW;
END;
$$language'plpgsql';

--Triggersforupdated_at
CREATETRIGGERupdate_users_updated_atBEFOREUPDATEONusersFOREACHROWEXECUTEFUNCTIONupdate_updated_at_column();
CREATETRIGGERupdate_challenges_updated_atBEFOREUPDATEONchallengesFOREACHROWEXECUTEFUNCTIONupdate_updated_at_column();
CREATETRIGGERupdate_user_challenge_progress_updated_atBEFOREUPDATEONuser_challenge_progressFOREACHROWEXECUTEFUNCTIONupdate_updated_at_column();